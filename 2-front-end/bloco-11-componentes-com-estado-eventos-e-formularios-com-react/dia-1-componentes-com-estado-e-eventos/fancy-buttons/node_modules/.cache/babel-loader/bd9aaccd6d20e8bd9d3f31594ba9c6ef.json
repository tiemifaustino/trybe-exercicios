{"ast":null,"code":"var _jsxFileName = \"/home/tiemi/trybe-exercicios/2-front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fancy-buttons/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      clickButtonOne: 0,\n      clickButtonTwo: 0,\n      clickButtonThree: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickButton2 = this.handleClickButton2.bind(this);\n    this.handleClickButton3 = this.handleClickButton3.bind(this);\n  }\n\n  handleClick() {\n    this.setState((estadoAnterior, _props) => ({\n      clickButtonOne: 1\n    }));\n    console.log('Clicou no botão', this.state.clickButtonOne, `${this.getButtonColor(this.state.clickButtonOne)}`);\n  }\n\n  handleClickButton2() {\n    this.setState(estadoAnterior => ({\n      clickButtonTwo: estadoAnterior.clickButtonTwo + 1\n    }));\n    console.log('Você clicou no botão 2', this.state.clickButtonTwo, `${this.getButtonColor(this.state.clickButtonTwo)}`);\n  }\n\n  handleClickButton3() {\n    // Descontrução do \"estadoAnterior.clickButtonThree\" para utilizar somente a chave \"clickButtonThree\" \n    this.setState(_ref => {\n      let {\n        clickButtonThree\n      } = _ref;\n      return {\n        // clickButtonThree: estadoAnterior.clickButtonThree + 1,\n        clickButtonThree: clickButtonThree + 1\n      };\n    });\n    console.log('Clicou no botão 3', this.state.clickButtonThree, `${this.getButtonColor(this.state.clickButtonThree)}`);\n  } // Para essa função, não precisamos utilizar o bind porque ela é utilizada apenas dentro do contexto do componente App\n\n\n  getButtonColor(number) {\n    // Muda a cor para verde se o número for par\n    return number % 2 === 0 ? 'green' : 'pink';\n  }\n\n  render() {\n    const {\n      clickButtonTwo,\n      clickButtonThree\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleClick // Para renderizarmos as cores, precisamos acrescentar a função que contém a nossa lógica ao \"inline style\", passando o estado correspondente como parâmetro\n        ,\n        style: {\n          backgroundColor: this.getButtonColor(this.state.clickButtonOne)\n        },\n        children: [\"Button One = \", this.state.clickButtonOne]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleClickButton2,\n        style: {\n          backgroundColor: this.getButtonColor(clickButtonTwo)\n        },\n        children: [\"Button Two = \", this.state.clickButtonTwo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleClickButton3,\n        style: {\n          backgroundColor: this.getButtonColor(clickButtonThree)\n        },\n        children: [\"Button Three = \", this.state.clickButtonThree]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tiemi/trybe-exercicios/2-front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fancy-buttons/src/App.js"],"names":["React","App","Component","constructor","state","clickButtonOne","clickButtonTwo","clickButtonThree","handleClick","bind","handleClickButton2","handleClickButton3","setState","estadoAnterior","_props","console","log","getButtonColor","number","render","backgroundColor"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\n\n\nclass App extends React.Component {s\n  constructor() {\n    super();\n\n    this.state = {\n      clickButtonOne: 0,\n      clickButtonTwo: 0,\n      clickButtonThree: 0,\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickButton2 = this.handleClickButton2.bind(this);\n    this.handleClickButton3 = this.handleClickButton3.bind(this);\n  }\n  \n  handleClick() {\n    this.setState((estadoAnterior, _props) => ({\n      clickButtonOne: 1,\n    }))\n    console.log('Clicou no botão', this.state.clickButtonOne, `${this.getButtonColor(this.state.clickButtonOne)}`)\n  }\n  \n  handleClickButton2() {\n    this.setState((estadoAnterior) => ({\n      clickButtonTwo: estadoAnterior.clickButtonTwo + 1,\n    }))\n    console.log('Você clicou no botão 2', this.state.clickButtonTwo, `${this.getButtonColor(this.state.clickButtonTwo)}`);\n  }\n  \n  handleClickButton3() {\n    // Descontrução do \"estadoAnterior.clickButtonThree\" para utilizar somente a chave \"clickButtonThree\" \n    this.setState(({ clickButtonThree }) => ({\n      // clickButtonThree: estadoAnterior.clickButtonThree + 1,\n      clickButtonThree: clickButtonThree + 1,\n    }));\n    console.log('Clicou no botão 3', this.state.clickButtonThree, `${this.getButtonColor(this.state.clickButtonThree)}`);\n  }\n\n   // Para essa função, não precisamos utilizar o bind porque ela é utilizada apenas dentro do contexto do componente App\n  getButtonColor(number) {\n    // Muda a cor para verde se o número for par\n    return number % 2 === 0 ? 'green' : 'pink';\n  }\n\n  render() {\n    const { clickButtonTwo, clickButtonThree } = this.state;\n\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onClick={this.handleClick}\n\n          // Para renderizarmos as cores, precisamos acrescentar a função que contém a nossa lógica ao \"inline style\", passando o estado correspondente como parâmetro\n          style={{ backgroundColor: this.getButtonColor(this.state.clickButtonOne) }}\n          >Button One = {this.state.clickButtonOne}\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleClickButton2}\n          style={{ backgroundColor: this.getButtonColor(clickButtonTwo) }}\n          >Button Two = {this.state.clickButtonTwo}\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleClickButton3}\n          style={{ backgroundColor: this.getButtonColor(clickButtonThree) }}\n          >Button Three = {this.state.clickButtonThree}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}