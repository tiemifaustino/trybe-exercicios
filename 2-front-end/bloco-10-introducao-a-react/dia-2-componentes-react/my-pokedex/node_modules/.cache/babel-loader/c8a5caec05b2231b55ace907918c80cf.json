{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TEXT_NODE = void 0;\nexports.checkContainerType = checkContainerType;\nexports.getDocument = getDocument;\nexports.getWindowFromNode = getWindowFromNode;\nexports.jestFakeTimersAreEnabled = jestFakeTimersAreEnabled; // Constant node.nodeType for text nodes, see:\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#Node_type_constants\n\nconst TEXT_NODE = 3;\nexports.TEXT_NODE = TEXT_NODE;\n\nfunction jestFakeTimersAreEnabled() {\n  /* istanbul ignore else */\n  if (typeof jest !== 'undefined' && jest !== null) {\n    return (// legacy timers\n      setTimeout._isMockFunction === true || // modern timers\n      Object.prototype.hasOwnProperty.call(setTimeout, 'clock')\n    );\n  } // istanbul ignore next\n\n\n  return false;\n}\n\nfunction getDocument() {\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    throw new Error('Could not find default container');\n  }\n\n  return window.document;\n}\n\nfunction getWindowFromNode(node) {\n  if (node.defaultView) {\n    // node is document\n    return node.defaultView;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView) {\n    // node is a DOM node\n    return node.ownerDocument.defaultView;\n  } else if (node.window) {\n    // node is window\n    return node.window;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView === null) {\n    throw new Error(`It looks like the window object is not available for the provided node.`);\n  } else if (node.then instanceof Function) {\n    throw new Error(`It looks like you passed a Promise object instead of a DOM node. Did you do something like \\`fireEvent.click(screen.findBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`, or await the findBy query \\`fireEvent.click(await screen.findBy...\\`?`);\n  } else if (Array.isArray(node)) {\n    throw new Error(`It looks like you passed an Array instead of a DOM node. Did you do something like \\`fireEvent.click(screen.getAllBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`?`);\n  } else if (typeof node.debug === 'function' && typeof node.logTestingPlaygroundURL === 'function') {\n    throw new Error(`It looks like you passed a \\`screen\\` object. Did you do something like \\`fireEvent.click(screen, ...\\` when you meant to use a query, e.g. \\`fireEvent.click(screen.getBy..., \\`?`);\n  } else {\n    // The user passed something unusual to a calling function\n    throw new Error(`The given node is not an Element, the node type is: ${typeof node}.`);\n  }\n}\n\nfunction checkContainerType(container) {\n  if (!container || !(typeof container.querySelector === 'function') || !(typeof container.querySelectorAll === 'function')) {\n    throw new TypeError(`Expected container to be an Element, a Document or a DocumentFragment but got ${getTypeName(container)}.`);\n  }\n\n  function getTypeName(object) {\n    if (typeof object === 'object') {\n      return object === null ? 'null' : object.constructor.name;\n    }\n\n    return typeof object;\n  }\n}","map":{"version":3,"sources":["/home/tiemi/trybe-exercicios/2-front-end/bloco-10-introducao-a-react/dia-2-componentes-react/my-pokedex/node_modules/@testing-library/dom/dist/helpers.js"],"names":["Object","defineProperty","exports","value","TEXT_NODE","checkContainerType","getDocument","getWindowFromNode","jestFakeTimersAreEnabled","jest","setTimeout","_isMockFunction","prototype","hasOwnProperty","call","window","Error","document","node","defaultView","ownerDocument","then","Function","Array","isArray","debug","logTestingPlaygroundURL","container","querySelector","querySelectorAll","TypeError","getTypeName","object","constructor","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TEXT_NODE = void 0;\nexports.checkContainerType = checkContainerType;\nexports.getDocument = getDocument;\nexports.getWindowFromNode = getWindowFromNode;\nexports.jestFakeTimersAreEnabled = jestFakeTimersAreEnabled;\n// Constant node.nodeType for text nodes, see:\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#Node_type_constants\nconst TEXT_NODE = 3;\nexports.TEXT_NODE = TEXT_NODE;\n\nfunction jestFakeTimersAreEnabled() {\n  /* istanbul ignore else */\n  if (typeof jest !== 'undefined' && jest !== null) {\n    return (// legacy timers\n      setTimeout._isMockFunction === true || // modern timers\n      Object.prototype.hasOwnProperty.call(setTimeout, 'clock')\n    );\n  } // istanbul ignore next\n\n\n  return false;\n}\n\nfunction getDocument() {\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    throw new Error('Could not find default container');\n  }\n\n  return window.document;\n}\n\nfunction getWindowFromNode(node) {\n  if (node.defaultView) {\n    // node is document\n    return node.defaultView;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView) {\n    // node is a DOM node\n    return node.ownerDocument.defaultView;\n  } else if (node.window) {\n    // node is window\n    return node.window;\n  } else if (node.ownerDocument && node.ownerDocument.defaultView === null) {\n    throw new Error(`It looks like the window object is not available for the provided node.`);\n  } else if (node.then instanceof Function) {\n    throw new Error(`It looks like you passed a Promise object instead of a DOM node. Did you do something like \\`fireEvent.click(screen.findBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`, or await the findBy query \\`fireEvent.click(await screen.findBy...\\`?`);\n  } else if (Array.isArray(node)) {\n    throw new Error(`It looks like you passed an Array instead of a DOM node. Did you do something like \\`fireEvent.click(screen.getAllBy...\\` when you meant to use a \\`getBy\\` query \\`fireEvent.click(screen.getBy...\\`?`);\n  } else if (typeof node.debug === 'function' && typeof node.logTestingPlaygroundURL === 'function') {\n    throw new Error(`It looks like you passed a \\`screen\\` object. Did you do something like \\`fireEvent.click(screen, ...\\` when you meant to use a query, e.g. \\`fireEvent.click(screen.getBy..., \\`?`);\n  } else {\n    // The user passed something unusual to a calling function\n    throw new Error(`The given node is not an Element, the node type is: ${typeof node}.`);\n  }\n}\n\nfunction checkContainerType(container) {\n  if (!container || !(typeof container.querySelector === 'function') || !(typeof container.querySelectorAll === 'function')) {\n    throw new TypeError(`Expected container to be an Element, a Document or a DocumentFragment but got ${getTypeName(container)}.`);\n  }\n\n  function getTypeName(object) {\n    if (typeof object === 'object') {\n      return object === null ? 'null' : object.constructor.name;\n    }\n\n    return typeof object;\n  }\n}"]},"metadata":{},"sourceType":"script"}