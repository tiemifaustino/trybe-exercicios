{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildTimeValue = buildTimeValue;\n\nfunction buildTimeValue(value) {\n  const onlyDigitsValue = value.replace(/\\D/g, '');\n\n  if (onlyDigitsValue.length < 2) {\n    return value;\n  }\n\n  const firstDigit = parseInt(onlyDigitsValue[0], 10);\n  const secondDigit = parseInt(onlyDigitsValue[1], 10);\n\n  if (firstDigit >= 3 || firstDigit === 2 && secondDigit >= 4) {\n    let index;\n\n    if (firstDigit >= 3) {\n      index = 1;\n    } else {\n      index = 2;\n    }\n\n    return build(onlyDigitsValue, index);\n  }\n\n  if (value.length === 2) {\n    return value;\n  }\n\n  return build(onlyDigitsValue, 2);\n}\n\nfunction build(onlyDigitsValue, index) {\n  const hours = onlyDigitsValue.slice(0, index);\n  const validHours = Math.min(parseInt(hours, 10), 23);\n  const minuteCharacters = onlyDigitsValue.slice(index);\n  const parsedMinutes = parseInt(minuteCharacters, 10);\n  const validMinutes = Math.min(parsedMinutes, 59);\n  return `${validHours.toString().padStart(2, '0')}:${validMinutes.toString().padStart(2, '0')}`;\n}","map":{"version":3,"sources":["/home/tiemi/trybe-exercicios/2-front-end/bloco-10-introducao-a-react/dia-2-componentes-react/my-pokedex/node_modules/@testing-library/user-event/dist/utils/edit/buildTimeValue.js"],"names":["Object","defineProperty","exports","value","buildTimeValue","onlyDigitsValue","replace","length","firstDigit","parseInt","secondDigit","index","build","hours","slice","validHours","Math","min","minuteCharacters","parsedMinutes","validMinutes","toString","padStart"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBA,cAAzB;;AAEA,SAASA,cAAT,CAAwBD,KAAxB,EAA+B;AAC7B,QAAME,eAAe,GAAGF,KAAK,CAACG,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAxB;;AAEA,MAAID,eAAe,CAACE,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,WAAOJ,KAAP;AACD;;AAED,QAAMK,UAAU,GAAGC,QAAQ,CAACJ,eAAe,CAAC,CAAD,CAAhB,EAAqB,EAArB,CAA3B;AACA,QAAMK,WAAW,GAAGD,QAAQ,CAACJ,eAAe,CAAC,CAAD,CAAhB,EAAqB,EAArB,CAA5B;;AAEA,MAAIG,UAAU,IAAI,CAAd,IAAmBA,UAAU,KAAK,CAAf,IAAoBE,WAAW,IAAI,CAA1D,EAA6D;AAC3D,QAAIC,KAAJ;;AAEA,QAAIH,UAAU,IAAI,CAAlB,EAAqB;AACnBG,MAAAA,KAAK,GAAG,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,KAAK,GAAG,CAAR;AACD;;AAED,WAAOC,KAAK,CAACP,eAAD,EAAkBM,KAAlB,CAAZ;AACD;;AAED,MAAIR,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOJ,KAAP;AACD;;AAED,SAAOS,KAAK,CAACP,eAAD,EAAkB,CAAlB,CAAZ;AACD;;AAED,SAASO,KAAT,CAAeP,eAAf,EAAgCM,KAAhC,EAAuC;AACrC,QAAME,KAAK,GAAGR,eAAe,CAACS,KAAhB,CAAsB,CAAtB,EAAyBH,KAAzB,CAAd;AACA,QAAMI,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASR,QAAQ,CAACI,KAAD,EAAQ,EAAR,CAAjB,EAA8B,EAA9B,CAAnB;AACA,QAAMK,gBAAgB,GAAGb,eAAe,CAACS,KAAhB,CAAsBH,KAAtB,CAAzB;AACA,QAAMQ,aAAa,GAAGV,QAAQ,CAACS,gBAAD,EAAmB,EAAnB,CAA9B;AACA,QAAME,YAAY,GAAGJ,IAAI,CAACC,GAAL,CAASE,aAAT,EAAwB,EAAxB,CAArB;AACA,SAAQ,GAAEJ,UAAU,CAACM,QAAX,GAAsBC,QAAtB,CAA+B,CAA/B,EAAkC,GAAlC,CAAuC,IAAGF,YAAY,CAACC,QAAb,GAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAyC,EAA7F;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildTimeValue = buildTimeValue;\n\nfunction buildTimeValue(value) {\n  const onlyDigitsValue = value.replace(/\\D/g, '');\n\n  if (onlyDigitsValue.length < 2) {\n    return value;\n  }\n\n  const firstDigit = parseInt(onlyDigitsValue[0], 10);\n  const secondDigit = parseInt(onlyDigitsValue[1], 10);\n\n  if (firstDigit >= 3 || firstDigit === 2 && secondDigit >= 4) {\n    let index;\n\n    if (firstDigit >= 3) {\n      index = 1;\n    } else {\n      index = 2;\n    }\n\n    return build(onlyDigitsValue, index);\n  }\n\n  if (value.length === 2) {\n    return value;\n  }\n\n  return build(onlyDigitsValue, 2);\n}\n\nfunction build(onlyDigitsValue, index) {\n  const hours = onlyDigitsValue.slice(0, index);\n  const validHours = Math.min(parseInt(hours, 10), 23);\n  const minuteCharacters = onlyDigitsValue.slice(index);\n  const parsedMinutes = parseInt(minuteCharacters, 10);\n  const validMinutes = Math.min(parsedMinutes, 59);\n  return `${validHours.toString().padStart(2, '0')}:${validMinutes.toString().padStart(2, '0')}`;\n}"]},"metadata":{},"sourceType":"script"}